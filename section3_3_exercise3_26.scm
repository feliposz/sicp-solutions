#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 53 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 64 128 128 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 64 128 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 1206 0 18 3 16 #"; TREE structure"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"entry"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 11 #"left-branch"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 12 #"right-branch"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 16 #"set-left-branch!"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 4 3 1 #" "
0 0 14 3 7 #"subtree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 8 #"set-car!"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"subtree"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 17 #"set-right-branch!"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 4 3 1 #" "
0 0 14 3 7 #"subtree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 8 #"set-car!"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"cddr"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"subtree"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 9 #"make-tree"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 4 3 1 #" "
0 0 14 3 4 #"left"
0 0 4 3 1 #" "
0 0 14 3 5 #"right"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 23 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 4 3 1 #" "
0 0 14 3 4 #"left"
0 0 4 3 1 #" "
0 0 14 3 5 #"right"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 12 #"display-tree"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 23 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 23 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 12 #"display-tree"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 12 #"right-branch"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 6 #"      "
0 0 23 3 1 #"("
0 0 14 3 6 #"indent"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 20 3 6 #"\"    \""
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"entry"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 2 #"))"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"newline"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 6 #"      "
0 0 23 3 1 #"("
0 0 14 3 12 #"display-tree"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 11 #"left-branch"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"indent"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 14 3 6 #"string"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 23 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 23 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 6 #"string"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 6 #"      "
0 0 23 3 1 #"("
0 0 14 3 6 #"indent"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"string"
0 0 23 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 17 #"; TABLE as a TREE"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 41 #"; TODO: allow for heterogenous comparison"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 23 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 23 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"string?"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"string?"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 8 #"string<?"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 23 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 3 1 #" "
0 0 21 3 2 #"#t"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 23 3 2 #"(("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"pair?"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"pair?"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 23 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 6 #"lower?"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 3 1 #" "
0 0 21 3 2 #"#t"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 23 3 2 #"(("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 23 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 21 3 2 #"#f"
0 0 23 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 23 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 20 3 25 #"\"Can't compare - LOWER? \""
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 4 #"))))"
0 0 20 29 1 #"\n"
0 0 20 3 48 #"                                                "
0 0 20 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7         679 4           0 0           0 112 0 18 3 12
#";TEST lower?"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 21 3 1 #"1"
0 0 2 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 21 3 1 #"1"
0 0 2 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 21 3 1 #"2"
0 0 2 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 20 3 3 #"\"a\""
0 0 2 3 1 #" "
0 0 20 3 3 #"\"b\""
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 20 3 3 #"\"a\""
0 0 2 3 1 #" "
0 0 20 3 3 #"\"a\""
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 20 3 3 #"\"b\""
0 0 2 3 1 #" "
0 0 20 3 3 #"\"a\""
0 0 23 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 2 #"()"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 3 #"())"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 2 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 2 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 2 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 2 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 2 3 1 #" "
0 0 21 3 1 #"4"
0 0 23 3 1 #")"
0 0 2 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 2 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 2 29 1 #"\n"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 58
#"; Given a key, a tree and the parent to that tree (or nil)"
0 0 4 29 1 #"\n"
0 0 18 3 1 #";"
0 0 4 29 1 #"\n"
0 0 18 3 55 #"; Return a pair containing the item with that key-value"
0 0 4 29 1 #"\n"
0 0 18 3 5 #"; and"
0 0 18 3 1 #" "
0 0 18 3 3 #"the"
0 0 18 3 1 #" "
0 0 18 3 11 #"parent-tree"
0 0 18 3 1 #" "
0 0 18 3 2 #"to"
0 0 18 3 1 #" "
0 0 18 3 4 #"that"
0 0 18 3 5 #" item"
0 0 4 29 1 #"\n"
0 0 18 3 54 #"; Or return #f and the last-item traversed in the tree"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"record-key"
0 0 4 3 1 #" "
0 0 14 3 3 #"car"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"record-value"
0 0 4 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"set-record-value!"
0 0 4 3 1 #" "
0 0 14 3 8 #"set-cdr!"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"result-record"
0 0 4 3 1 #" "
0 0 14 3 3 #"car"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"result-parent"
0 0 4 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 25 #";Key,Tree,Tree->Item,Tree"
0 0 20 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 11 #"lookup-tree"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 14 3 4 #"tree"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-tree"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 2 #"  "
0 0 23 3 1 #"("
0 0 14 3 2 #"if"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"null?"
0 0 20 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 6 #"      "
0 0 23 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 21 3 2 #"#f"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-tree"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 6 #"      "
0 0 23 3 1 #"("
0 0 16 3 3 #"let"
0 0 20 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 6 #"record"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"entry"
0 0 20 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 3 #")))"
0 0 20 29 1 #"\n"
0 0 20 3 8 #"        "
0 0 23 3 1 #"("
0 0 16 3 4 #"cond"
0 0 20 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 6 #"equal?"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"record-key"
0 0 20 3 1 #" "
0 0 14 3 6 #"record"
0 0 23 3 2 #"))"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 6 #"record"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-tree"
0 0 23 3 2 #"))"
0 0 20 29 1 #"\n"
0 0 20 3 14 #"              "
0 0 23 3 2 #"(("
0 0 14 3 6 #"lower?"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"record-key"
0 0 20 3 1 #" "
0 0 14 3 6 #"record"
0 0 23 3 2 #"))"
0 0 20 29 1 #"\n"
0 0 20 3 15 #"               "
0 0 23 3 1 #"("
0 0 14 3 11 #"lookup-tree"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 11 #"left-branch"
0 0 20 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 2 #"))"
0 0 20 29 1 #"\n"
0 0 20 3 14 #"              "
0 0 23 3 1 #"("
0 0 14 3 4 #"else"
0 0 20 29 1 #"\n"
0 0 20 3 15 #"               "
0 0 23 3 1 #"("
0 0 14 3 11 #"lookup-tree"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 12 #"right-branch"
0 0 20 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 23 3 6 #"))))))"
0 0 20 29 1 #"\n"
0 0 20 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"make-table"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 2 #"  "
0 0 23 3 1 #"("
0 0 16 3 3 #"let"
0 0 20 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 10 #"local-tree"
0 0 20 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 4 #"()))"
0 0 20 29 1 #"\n"
0 0 20 3 4 #"    "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 6 #"      "
0 0 23 3 1 #"("
0 0 16 3 3 #"let"
0 0 20 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 6 #"record"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 13 #"result-record"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 11 #"lookup-tree"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 14 3 10 #"local-tree"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 6 #"()))))"
0 0 20 29 1 #"\n"
0 0 20 3 8 #"        "
0 0 23 3 1 #"("
0 0 14 3 2 #"if"
0 0 20 3 1 #" "
0 0 14 3 6 #"record"
0 0 20 29 1 #"\n"
0 0 20 3 12 #"            "
0 0 23 3 1 #"("
0 0 14 3 12 #"record-value"
0 0 4 3 1 #" "
0 0 14 3 6 #"record"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 12 #"            "
0 0 21 3 2 #"#f"
0 0 23 3 3 #")))"
0 0 20 29 1 #"\n"
0 0 20 3 4 #"    "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 7 #"insert!"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 14 3 5 #"value"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 6 #"      "
0 0 23 3 1 #"("
0 0 16 3 3 #"let"
0 0 20 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 6 #"result"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 11 #"lookup-tree"
0 0 20 3 1 #" "
0 0 14 3 3 #"key"
0 0 20 3 1 #" "
0 0 14 3 10 #"local-tree"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 5 #"())))"
0 0 20 29 1 #"\n"
0 0 20 3 8 #"        "
0 0 23 3 1 #"("
0 0 14 3 2 #"if"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 13 #"result-record"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 12 #"            "
0 0 23 3 1 #"("
0 0 14 3 17 #"set-record-value!"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 13 #"result-record"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 23 3 1 #")"
0 0 20 3 1 #" "
0 0 14 3 5 #"value"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 23 3 1 #"("
0 0 16 3 3 #"let"
0 0 4 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 9 #"make-tree"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 2 #"()"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 4 #"()))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 23 3 1 #"("
0 0 14 3 6 #"parent"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 13 #"result-parent"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 23 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 23 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 6 #"parent"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 23 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 10 #"local-tree"
0 0 4 3 1 #" "
0 0 14 3 3 #"new"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 18 3 12 #"; empty-tree"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 23 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 6 #"lower?"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"record-key"
0 0 4 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"entry"
0 0 4 3 1 #" "
0 0 14 3 6 #"parent"
0 0 23 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 23 3 1 #"("
0 0 14 3 16 #"set-left-branch!"
0 0 4 3 1 #" "
0 0 14 3 6 #"parent"
0 0 4 3 1 #" "
0 0 14 3 3 #"new"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 23 3 1 #"("
0 0 14 3 17 #"set-right-branch!"
0 0 4 3 1 #" "
0 0 14 3 6 #"parent"
0 0 4 3 1 #" "
0 0 14 3 3 #"new"
0 0 23 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 20 3 6 #"      "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 4 #"    "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"print"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 6 #"      "
0 0 23 3 1 #"("
0 0 14 3 12 #"display-tree"
0 0 4 3 1 #" "
0 0 14 3 10 #"local-tree"
0 0 4 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 2 #"))"
0 0 20 29 1 #"\n"
0 0 20 3 4 #"    "
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 8 #"dispatch"
0 0 20 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 6 #"      "
0 0 23 3 1 #"("
0 0 16 3 4 #"cond"
0 0 20 3 1 #" "
0 0 23 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 20 3 1 #" "
0 0 14 3 1 #"m"
0 0 20 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"lookup-proc"
0 0 23 3 1 #")"
0 0 20 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 12 #"            "
0 0 23 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 20 3 1 #" "
0 0 14 3 1 #"m"
0 0 20 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"insert-proc"
0 0 23 3 1 #")"
0 0 20 3 1 #" "
0 0 14 3 7 #"insert!"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 12 #"            "
0 0 23 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 20 3 1 #" "
0 0 14 3 1 #"m"
0 0 20 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"print"
0 0 23 3 1 #")"
0 0 20 3 1 #" "
0 0 14 3 5 #"print"
0 0 23 3 1 #")"
0 0 20 29 1 #"\n"
0 0 20 3 12 #"            "
0 0 23 3 1 #"("
0 0 14 3 4 #"else"
0 0 20 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 5 #"error"
0 0 20 3 2 #" \""
0 0 20 3 7 #"Unknown"
0 0 20 3 1 #" "
0 0 20 3 9 #"operation"
0 0 20 3 1 #" "
0 0 20 3 1 #"-"
0 0 20 3 1 #" "
0 0 20 3 6 #"TABLE\""
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 23 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 14 3 8 #"dispatch"
0 0 23 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"operation-table"
0 0 25 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 10 #"make-table"
0 0 23 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"get"
0 0 25 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 15 #"operation-table"
0 0 25 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"lookup-proc"
0 0 23 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"put"
0 0 25 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 15 #"operation-table"
0 0 25 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"insert-proc"
0 0 23 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 23 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"print-table"
0 0 25 3 1 #" "
0 0 23 3 1 #"("
0 0 14 3 15 #"operation-table"
0 0 25 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"print"
0 0 23 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 6 #"; test"
0 0 25 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"2"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"beaf"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"apricot"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"apple"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"2"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"banana"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"cherry"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"chocolate"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"print-table"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"2"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"2"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"pineapple"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"dark-chocolate"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"put"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 4 3 1 #" "
0 0 21 3 1 #"0"
0 0 23 3 1 #")"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"new-stuff"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 11 #"print-table"
0 0 23 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"3"
0 0 4 3 1 #" "
0 0 21 3 1 #"2"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"1"
0 0 4 3 1 #" "
0 0 21 3 1 #"3"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 3 #"get"
0 0 4 3 1 #" "
0 0 21 3 1 #"'"
0 0 23 3 1 #"("
0 0 21 3 1 #"4"
0 0 4 3 1 #" "
0 0 21 3 1 #"1"
0 0 23 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
